if &compatible
  set nocompatible
end

filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
" Let Vundle manage Vundle
Plugin 'gmarik/Vundle.vim'

" Ruby Support
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-rake'
Plugin 'tpope/vim-bundler'
Plugin 'ecomba/vim-ruby-refactoring'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'jgdavey/vim-blockle'
Plugin 'skalnik/vim-vroom'
Plugin 'tpope/vim-rvm'
Plugin 'tpope/vim-endwise'

" Coffee-script
Plugin 'kchmck/vim-coffee-script'

" Navigation
Plugin 'scrooloose/nerdtree'
Plugin 'Shougo/unite.vim'
Plugin 'Shougo/vimproc.vim'
Plugin 'Shougo/neomru.vim'
Plugin 'Shougo/unite-outline'

" Shell
Plugin 'pbrisbin/vim-mkdir'
Plugin 'tpope/vim-eunuch'
Plugin 'benmills/vimux'
Plugin 'tpope/vim-dispatch'

" Clojure
Plugin 'tpope/vim-fireplace'
Plugin 'guns/vim-clojure-static'
Plugin 'amdt/vim-niji'
Plugin 'tpope/vim-leiningen'
Plugin 'tpope/vim-classpath'

" GUI
Plugin 'bling/vim-airline'
Plugin 'jnurmine/Zenburn'
Plugin 'tsukkee/unite-help'

" Git support
Plugin 'tpope/vim-fugitive'
Plugin 'idanarye/vim-merginal'
Plugin 'gregsexton/gitv'

" Code manipulation
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'tpope/vim-surround'
Plugin 'tomtom/tcomment_vim'
Plugin 'kana/vim-textobj-user'
Plugin 'vim-scripts/ctags.vim'
Plugin 'vim-scripts/matchit.zip'
Bundle 'Shougo/neosnippet'
Bundle 'Shougo/neosnippet-snippets'
Bundle 'Shougo/neocomplete.vim'
Plugin 'Shougo/context_filetype.vim'
Plugin 'honza/vim-snippets'
Plugin 'scrooloose/syntastic'
Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'wellle/targets.vim'
Plugin 'junegunn/vim-easy-align'

call vundle#end()
filetype on

let g:vundle_default_git_proto = 'git'
